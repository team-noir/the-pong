version: '3'

services:
  nginx:
    container_name: the-pong_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:8080
      - 443:8081
    depends_on:
      - backend
      - frontend
      - postgres
    networks:
      - the-pong-net
    environment:
      - TZ=Asia/Seoul

  postgres:
    image: postgres:latest
    container_name: the-pong_postgres
    restart: unless-stopped
    networks:
      - the-pong-net
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  backend:
    container_name: the-pong_backend
    build: ./backend
    restart: unless-stopped
    networks:
      - the-pong-net
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
      FT_UID: ${FT_UID}
      FT_SECRET: ${FT_SECRET}
      FT_CB: ${FT_CB}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_APP_URL: ${CLIENT_APP_URL}
    volumes:
      - backend-uploads:/usr/src/app/uploads

  frontend:
    container_name: the-pong_frontend
    build: ./frontend
    restart: unless-stopped
    networks:
      - the-pong-net
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      PUBLIC_URL: ${PUBLIC_URL}
      REACT_APP_AUTHOR: ${REACT_APP_AUTHOR}
      REACT_APP_TITLE: ${REACT_APP_TITLE}
      REACT_APP_DESCRIPTION: ${REACT_APP_DESCRIPTION}
    depends_on:
      - backend

networks:
  the-pong-net:

volumes:
  postgres:
  backend-uploads:
