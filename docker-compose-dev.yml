version: '3'

services:
  nginx:
    container_name: the-pong_nginx_dev
    build: ./nginx
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - backend
      - frontend
      - postgres
    networks:
      - the-pong-dev-net
    environment:
      - TZ=Asia/Seoul

  postgres:
    image: postgres:latest
    container_name: the-pong_postgres_dev
    restart: unless-stopped
    networks:
      - the-pong-dev-net
    ports:
      - 5432:5432
    volumes:
      - postgres-dev:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - '5432'
    ports:
      - '5432:5432'

  redis:
    build: ./redis
    container_name: the-pong_redis_dev
    restart: unless-stopped
    networks:
      - the-pong-dev-net
    expose:
      - '6379'
    ports:
      - '6379:6379'
    

  backend:
    container_name: the-pong_backend_dev
    build: ./backend
    restart: unless-stopped
    networks:
      - the-pong-dev-net
    ports:
      - '8000:8000'
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: ${DATABASE_URL}
      FT_UID: ${FT_UID}
      FT_SECRET: ${FT_SECRET}
      FT_CB: ${FT_CB}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_APP_URL: ${CLIENT_APP_URL}

  frontend:
    container_name: the-pong_frontend_dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    networks:
      - the-pong-dev-net
    ports:
      - '3000:3000'
    volumes:
      - ./frontend/src:/usr/src/app/src:ro
      - ./frontend/src/tests/__snapshots__:/usr/src/app/src/tests/__snapshots__:rw

networks:
  the-pong-dev-net:

volumes:
  postgres-dev:
  redis-dev:
